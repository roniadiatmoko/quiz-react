{"version":3,"sources":["content/HighScore.js","content/HeaderContent.js","content/ContainerContent.js","App.js","serviceWorker.js","index.js"],"names":["DataHighScore","props","data","map","item","key","Table","Row","Cell","name","score","time","HighScore","style","textAlign","Header","as","fixed","HeaderCell","Body","this","React","Component","HeaderContent","state","soal","quiz","percent","angka1","angka2","jawabSementara","pengecekan","nickname","highScore","document","getElementById","focus","setState","setInterval","detik","Math","floor","random","waktu","arr","e","preventDefault","concat","jawaban","parseInt","reset","clearInterval","target","value","Image","centered","size","src","display","Progress","indicating","id","onSubmit","cek","Input","autoFocus","action","color","labelPosition","icon","content","placeholder","onChange","Divider","iconPosition","inputNickname","Button","disabled","primary","onClick","start","pause","resume","Icon","ContainerContent","Container","App","Boolean","window","location","hostname","match","ReactDOM","render","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.c7d1a21a.chunk.js","sourcesContent":["import React from 'react'\r\nimport {Header, Table} from 'semantic-ui-react'\r\n\r\nfunction DataHighScore(props){\r\n\t\r\n\tlet data = props.data.map((item, key) => \r\n\t\t<Table.Row>\r\n\t      \t<Table.Cell>{key + 1}</Table.Cell>\r\n\t        <Table.Cell>{item.name}</Table.Cell>\r\n\t        <Table.Cell>{item.score}</Table.Cell>\r\n\t        <Table.Cell>{item.time}</Table.Cell>\r\n\t      </Table.Row>\r\n\t)\r\n\r\n\treturn data\r\n\t\r\n}\r\n\r\nclass HighScore extends React.Component{\r\n\tconstructor(){\r\n\t\tsuper()\r\n\r\n\t}\r\n\r\n\trender(){\r\n\t\treturn(\r\n\t\t\t<div style={{textAlign: \"center\"}}>\r\n\t\t    \t<Header as=\"h3\">HighScore</Header>\r\n\t\t    \t<Table fixed>\r\n\t\t\t\t    <Table.Header>\r\n\t\t\t\t      <Table.Row>\r\n\t\t\t\t        <Table.HeaderCell>#</Table.HeaderCell>\r\n\t\t\t\t        <Table.HeaderCell>Name</Table.HeaderCell>\r\n\t\t\t\t        <Table.HeaderCell>Score</Table.HeaderCell>\r\n\t\t\t\t        <Table.HeaderCell>Time</Table.HeaderCell>\r\n\t\t\t\t      </Table.Row>\r\n\t\t\t\t    </Table.Header>\r\n\r\n\t\t\t\t    <Table.Body>\r\n\t\t\t\t      \r\n\t\t    \t\t\t<DataHighScore data={this.props.data} />\r\n\t\t\t\t    </Table.Body>\r\n\t\t\t\t  </Table>\r\n\t\t\t\t    \r\n\t\t    </div>\r\n\t\t)\r\n\t}\r\n}\r\n\r\nexport default HighScore","import React from 'react'\r\nimport {Header, Icon, Image, Progress, Input, Button, Divider, Item} from 'semantic-ui-react'\r\n\r\nimport HighScore from './HighScore'\r\n\r\nclass HeaderContent extends React.Component{\r\n\tconstructor(){\r\n\t\tsuper()\r\n\t\tthis.state = {\r\n\t\t\tsoal: 1, //soalke\r\n\t\t\tquiz: 0, //0=stop, 1=mulai, 2=[pause] 3= selesai\r\n\t\t\tpercent: 0, //percent bar\r\n\t\t\ttime: 0, //detik\r\n\t\t\tangka1: 0, //soal\r\n\t\t\tangka2: 0, //soal\r\n\t\t\tscore: 0,\r\n\t\t\tjawabSementara: 0, //jawaban yang diketik\r\n\t\t\tpengecekan: '', //jawabn benar/salah\r\n\t\t\tnickname: '',\r\n\t\t\thighScore: [\r\n\t\t\t\t{'name': '','score': '','time': ''},\r\n\t\t\t],\r\n\t\t}\r\n\t}\r\n\r\n\tstart(){\r\n\t\tdocument.getElementById(\"f\").focus()\r\n\r\n\t\tthis.setState({\r\n\t\t\tquiz: 1,\r\n\t\t})\r\n\r\n\t\tsetInterval(() => this.detik(), 1000)\r\n\r\n\t\tthis.setState({\r\n\t\t\tpercent: 10,\r\n\t\t\tangka1: Math.floor(Math.random() * 100),\r\n\t\t\tangka2: Math.floor(Math.random() * 100),\r\n\t\t})\r\n\t}\r\n\r\n\tpause(){\r\n\t\tthis.setState({\r\n\t\t\tquiz: 2,\r\n\t\t})\r\n\r\n\t\tthis.waktu = this.state.time\r\n\t}\r\n\r\n\tresume(){\r\n\t\tdocument.getElementById(\"answerHere\").focus()\r\n\r\n\t\tthis.setState({\r\n\t\t\tquiz: 1,\r\n\t\t\tangka1: Math.floor(Math.random() * 100),\r\n\t\t\tangka2: Math.floor(Math.random() * 100),\r\n\t\t})\r\n\t}\r\n\r\n\tsaveToArray(arr){\r\n\t\tvar highScoreData = [\r\n\t\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t\t'name': this.state.nickname,\r\n\t\t\t\t\t\t\t\t\t'score': this.state.score,\r\n\t\t\t\t\t\t\t\t\t'time': this.state.time\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t]\r\n\t}\r\n\r\n\tcek(e){\r\n\t\te.preventDefault()\r\n\t\t//if soal sudah 10 soal maka selesai\r\n\t\tif(this.state.soal == 10){\r\n\t\t\t//simpan ke array highscore\r\n\t\t\tthis.setState({\r\n\t\t\t\t'highScore': this.state.highScore.concat([{\r\n\t\t\t\t\t\t\t\t\t'name': this.state.nickname,\r\n\t\t\t\t\t\t\t\t\t'score': this.state.score,\r\n\t\t\t\t\t\t\t\t\t'time': this.state.time}])\r\n\t\t\t})\r\n\r\n\t\t\tthis.setState({\r\n\t\t\t\tquiz: 3,\r\n\t\t\t\tsoal: 1, //soalke\r\n\t\t\t\tpercent: 0, //percent bar\r\n\t\t\t\ttime: 0, //detik\r\n\t\t\t\tangka1: 0, //soal\r\n\t\t\t\tangka2: 0, //soal\r\n\t\t\t\tjawabSementara: 0, //jawaban yang diketik\r\n\t\t\t\tpengecekan: '',\r\n\t\t\t})\r\n\r\n\r\n\t\t}else{\r\n\r\n\t\t\tlet jawaban = this.state.angka1 + this.state.angka2;\r\n\r\n\t\t\tthis.setState({\r\n\t\t\t\t\tpengecekan: 'Salah',\r\n\t\t\t\t})\r\n\t\t\tif (parseInt(this.state.jawabSementara) === jawaban) {\r\n\t\t\t\tthis.setState({\r\n\t\t\t\t\tpengecekan: 'Benar',\r\n\t\t\t\t\tscore: this.state.score + 10,\r\n\t\t\t\t})\r\n\t\t\t}\r\n\r\n\t\t\tdocument.getElementById(\"f\").reset()\r\n\t\t\tthis.setState({\r\n\t\t\t\tpercent: this.state.percent + 10,\r\n\t\t\t\tangka1: Math.floor(Math.random() * 100),\r\n\t\t\t\tangka2: Math.floor(Math.random() * 100),\r\n\t\t\t\tsoal: this.state.soal + 1,\r\n\t\t\t})\r\n\t\t}\r\n\t\t//\r\n\r\n\t}\r\n\r\n\tcomponentWillUnmount(){\r\n\t\tclearInterval(this.waktu)\r\n\t}\r\n\r\n\tdetik(){\r\n\t\tif(this.state.quiz == 1){\r\n\r\n\t\t\tthis.setState({\r\n\t\t\t\ttime: this.state.time + 1\r\n\t\t\t})\r\n\t\t}\r\n\t}\r\n\r\n\tinputNickname(e){\r\n\t\tthis.setState({\r\n\t\t\tnickname: e.target.value,\r\n\t\t})\t\t\r\n\t}\r\n\r\n\trender(){\r\n\t\treturn(\r\n\t\t\t<div>\r\n\t\t\t    <Image\r\n\t\t\t      centered\r\n\t\t\t      size='small'\r\n\t\t\t      src='https://www.diecoding.com/wp-content/uploads/2019/05/square.diecoding.google.bgwhite.512.png'\r\n\t\t\t    />\r\n\t\t\t    <div style={{textAlign:\"center\", display: this.state.quiz == 0 || this.state.quiz == 2 ? \"none\" : \"\"}}>\r\n\t\t\t    \t<div style={{display: this.state.quiz == 3 ? 'none' : ''}}>\r\n\t\t\t    \t\t<Header as=\"h1\">Happy Counting: {this.state.nickname}</Header>\r\n\t\t\t\t    \t<Header as='h2'>{this.state.time}</Header>\r\n\t\t\t\t    \t<Progress percent={this.state.percent} indicating >{this.state.soal}/10 </Progress>\r\n\t\t\t\t\t    <Header as='h1'>{this.state.angka1} + {this.state.angka2}</Header>\r\n\r\n\t\t\t\t\t    <form id=\"f\" onSubmit={(e) => this.cek(e)}>\r\n\t\t\t\t\t    <Input id=\"answerHere\" autoFocus action={{\r\n\t\t\t\t\t\t      color: 'teal',\r\n\t\t\t\t\t\t      labelPosition: 'right',\r\n\t\t\t\t\t\t      icon: 'send',\r\n\t\t\t\t\t\t      content: 'Press Enter to Check',\r\n\t\t\t\t\t\t    }} \r\n\t\t\t\t\t\t    placeholder='Answer Here...'\r\n\t\t\t\t\t\t    onChange={ (e) => this.setState({jawabSementara: e.target.value}) } />\r\n\t\t\t\t\t\t</form>\r\n\t\t\t\t\t\t<Header as=\"h4\">Answer: {this.state.pengecekan}</Header> \r\n\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t<Header as='h3'>Score: {this.state.score}</Header>\r\n\t\t\t\t\t\r\n\t\t\t    </div>\r\n\r\n\t\t\t    <br/><br/><br/>\r\n\t\t\t\t<Divider />\r\n\t\t\t\t<div  style={{textAlign: \"center\"}}>\r\n\t\t\t\t \t<Input autoFocus icon='user' style={{'display': this.state.quiz != 0 ? 'none' : ''}} iconPosition='left' placeholder='Input Nickname' onChange={(e) => this.inputNickname(e)}/> \r\n\t\t\t\t \t&nbsp;\r\n\t\t\t\t\t<Button disabled={this.state.nickname == '' ? 'disabled' : null} icon  primary  labelPosition=\"left\" onClick={() => this.state.quiz == 0 || this.state.quiz == 3 ? this.start() : this.state.quiz == 1 ? this.pause() : this.resume() }>\r\n\t\t\t\t      <Icon name= {this.state.quiz === 0 || this.state.quiz == 3 ? 'play' : this.state.quiz === 1 ? 'pause' : this.state.quiz === 2 ? 'play' : ''} />\r\n\t\t\t\t      {this.state.quiz === 0 || this.state.quiz == 3 ? 'Play' : this.state.quiz === 1 ? 'Pause' : this.state.quiz === 2 ? 'Resume' : ''}\r\n\t\t\t\t    </Button>\r\n\t\t\t    </div>\r\n\r\n\t\t\t    <br/><br/>\r\n\t\t\t    <HighScore data={this.state.highScore} />\r\n\t\t\t</div>\r\n\t\t)\r\n\t}\r\n}\r\n\r\nexport default HeaderContent","import React from 'react'\r\nimport { Container } from 'semantic-ui-react'\r\nimport HeaderContent from './HeaderContent'\r\n\r\nclass ContainerContent extends React.Component{\r\n  render(){\r\n    return(\r\n      <div>\r\n        <Container>\r\n          <HeaderContent/>\r\n        </Container>\r\n\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default ContainerContent","import React from 'react';\nimport './App.css';\nimport Container from './content/ContainerContent'\n\nfunction App() {\n  return (\n    <div>\n      <Container/>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import 'semantic-ui-css/semantic.min.css';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}