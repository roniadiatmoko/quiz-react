{"version":3,"sources":["content/HeaderContent.js","content/ContainerContent.js","App.js","serviceWorker.js","index.js"],"names":["HeaderContent","state","soal","quiz","percent","time","angka1","angka2","score","jawabSementara","pengecekan","nickname","document","getElementById","focus","this","setState","setInterval","detik","Math","floor","random","waktu","e","preventDefault","jawaban","parseInt","reset","clearInterval","target","value","Image","centered","size","src","style","textAlign","display","Header","as","Progress","indicating","id","onSubmit","cek","Input","autoFocus","action","color","labelPosition","icon","content","placeholder","onChange","Divider","iconPosition","inputNickname","Button","disabled","primary","onClick","start","pause","resume","Icon","name","Table","stackable","Row","HeaderCell","Body","Cell","React","Component","ContainerContent","Container","App","Boolean","window","location","hostname","match","ReactDOM","render","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.a433f66c.chunk.js","sourcesContent":["import React from 'react'\r\nimport {Header, Icon, Image, Progress, Input, Button, Divider, Table} from 'semantic-ui-react'\r\n\r\nclass HeaderContent extends React.Component{\r\n\tconstructor(){\r\n\t\tsuper()\r\n\t\tthis.state = {\r\n\t\t\tsoal: 1, //soalke\r\n\t\t\tquiz: 0, //0=stop, 1=mulai, 2=[pause] 3= selesai\r\n\t\t\tpercent: 0, //percent bar\r\n\t\t\ttime: 0, //detik\r\n\t\t\tangka1: 0, //soal\r\n\t\t\tangka2: 0, //soal\r\n\t\t\tscore: 0,\r\n\t\t\tjawabSementara: 0, //jawaban yang diketik\r\n\t\t\tpengecekan: '', //jawabn benar/salah\r\n\t\t\tnickname: '',\r\n\t\t}\r\n\t}\r\n\r\n\tstart(){\r\n\t\tdocument.getElementById(\"f\").focus()\r\n\r\n\t\tthis.setState({\r\n\t\t\tquiz: 1,\r\n\t\t})\r\n\r\n\t\tsetInterval(() => this.detik(), 1000)\r\n\r\n\t\tthis.setState({\r\n\t\t\tpercent: 10,\r\n\t\t\tangka1: Math.floor(Math.random() * 100),\r\n\t\t\tangka2: Math.floor(Math.random() * 100),\r\n\t\t})\r\n\t}\r\n\r\n\tpause(){\r\n\t\tthis.setState({\r\n\t\t\tquiz: 2,\r\n\t\t})\r\n\r\n\t\tthis.waktu = this.state.time\r\n\t}\r\n\r\n\tresume(){\r\n\t\tdocument.getElementById(\"answerHere\").focus()\r\n\r\n\t\tthis.setState({\r\n\t\t\tquiz: 1,\r\n\t\t\tangka1: Math.floor(Math.random() * 100),\r\n\t\t\tangka2: Math.floor(Math.random() * 100),\r\n\t\t})\r\n\t}\r\n\r\n\tcek(e){\r\n\t\te.preventDefault()\r\n\t\t//if soal sudah 10\r\n\t\tif(this.state.soal == 10){\r\n\t\t\tthis.setState({\r\n\t\t\t\tquiz: 3,\r\n\t\t\t\tsoal: 1, //soalke\r\n\t\t\t\tpercent: 0, //percent bar\r\n\t\t\t\ttime: 0, //detik\r\n\t\t\t\tangka1: 0, //soal\r\n\t\t\t\tangka2: 0, //soal\r\n\t\t\t\tscore: 0,\r\n\t\t\t\tjawabSementara: 0, //jawaban yang diketik\r\n\t\t\t\tpengecekan: '',\r\n\t\t\t})\r\n\t\t}else{\r\n\r\n\t\t\tlet jawaban = this.state.angka1 + this.state.angka2;\r\n\r\n\t\t\tthis.setState({\r\n\t\t\t\t\tpengecekan: 'Salah',\r\n\t\t\t\t})\r\n\t\t\tif (parseInt(this.state.jawabSementara) === jawaban) {\r\n\t\t\t\tthis.setState({\r\n\t\t\t\t\tpengecekan: 'Benar',\r\n\t\t\t\t\tscore: this.state.score + 10,\r\n\t\t\t\t})\r\n\t\t\t}\r\n\r\n\t\t\tdocument.getElementById(\"f\").reset()\r\n\t\t\tthis.setState({\r\n\t\t\t\tpercent: this.state.percent + 10,\r\n\t\t\t\tangka1: Math.floor(Math.random() * 100),\r\n\t\t\t\tangka2: Math.floor(Math.random() * 100),\r\n\t\t\t\tsoal: this.state.soal + 1,\r\n\t\t\t})\r\n\t\t}\r\n\t\t//\r\n\r\n\t}\r\n\r\n\tcomponentWillUnmount(){\r\n\t\tclearInterval(this.waktu)\r\n\t}\r\n\r\n\tdetik(){\r\n\t\tif(this.state.quiz == 1){\r\n\r\n\t\t\tthis.setState({\r\n\t\t\t\ttime: this.state.time + 1\r\n\t\t\t})\r\n\t\t}\r\n\t}\r\n\r\n\tinputNickname(e){\r\n\t\tthis.setState({\r\n\t\t\tnickname: e.target.value,\r\n\t\t})\t\t\r\n\t}\r\n\r\n\tcomponentDidMount(){\r\n\r\n\t}\r\n\r\n\trender(){\r\n\t\treturn(\r\n\t\t\t<div>\r\n\t\t\t    <Image\r\n\t\t\t      centered\r\n\t\t\t      size='small'\r\n\t\t\t      src='https://www.diecoding.com/wp-content/uploads/2019/05/square.diecoding.google.bgwhite.512.png'\r\n\t\t\t    />\r\n\t\t\t    <div style={{textAlign:\"center\", display: this.state.quiz == 0 || this.state.quiz == 2 ? \"none\" : \"\"}}>\r\n\t\t\t    \t<div style={{display: this.state.quiz == 3 ? 'none' : ''}}>\r\n\t\t\t\t    \t<Header as='h2'>{this.state.time}</Header>\r\n\t\t\t\t    \t<Progress percent={this.state.percent} indicating >{this.state.soal}/10 </Progress>\r\n\t\t\t\t\t    <Header as='h1'>{this.state.angka1} + {this.state.angka2}</Header>\r\n\r\n\t\t\t\t\t    <form id=\"f\" onSubmit={(e) => this.cek(e)}>\r\n\t\t\t\t\t    <Input id=\"answerHere\" autoFocus action={{\r\n\t\t\t\t\t\t      color: 'teal',\r\n\t\t\t\t\t\t      labelPosition: 'right',\r\n\t\t\t\t\t\t      icon: 'send',\r\n\t\t\t\t\t\t      content: 'Press Enter to Check',\r\n\t\t\t\t\t\t    }} \r\n\t\t\t\t\t\t    placeholder='Answer Here...'\r\n\t\t\t\t\t\t    onChange={ (e) => this.setState({jawabSementara: e.target.value}) } />\r\n\t\t\t\t\t\t</form>\r\n\t\t\t\t\t\t<Header as=\"h4\">Answer: {this.state.pengecekan}</Header> \r\n\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t<Header as='h3'>Score: {this.state.score}</Header>\r\n\t\t\t\t\t\r\n\t\t\t    </div>\r\n\r\n\t\t\t    <br/><br/><br/>\r\n\t\t\t\t<Divider />\r\n\t\t\t\t<div  style={{textAlign: \"center\"}}>\r\n\t\t\t\t \t<Input autoFocus icon='user' iconPosition='left' placeholder='Input Nickname' onChange={(e) => this.inputNickname(e)}/> \r\n\t\t\t\t \t&nbsp;\r\n\t\t\t\t\t<Button disabled={this.state.nickname == '' ? 'disabled' : null} icon  primary  labelPosition=\"left\" onClick={() => this.state.quiz == 0 || this.state.quiz == 3 ? this.start() : this.state.quiz == 1 ? this.pause() : this.resume() }>\r\n\t\t\t\t      <Icon name= {this.state.quiz === 0 || this.state.quiz == 3 ? 'play' : this.state.quiz === 1 ? 'pause' : this.state.quiz === 2 ? 'play' : ''} />\r\n\t\t\t\t      {this.state.quiz === 0 || this.state.quiz == 3 ? 'Play' : this.state.quiz === 1 ? 'Pause' : this.state.quiz === 2 ? 'Resume' : ''}\r\n\t\t\t\t    </Button>\r\n\t\t\t    </div>\r\n\r\n\t\t\t    <br/><br/>\r\n\t\t\t    <div style={{textAlign: \"center\"}}>\r\n\t\t\t    \t<Header as=\"h3\">HighScore</Header>\r\n\t\t\t    \t<Table stackable>\r\n\t\t\t\t\t    <Table.Header>\r\n\t\t\t\t\t      <Table.Row>\r\n\t\t\t\t\t      \t<Table.HeaderCell>#</Table.HeaderCell>\r\n\t\t\t\t\t        <Table.HeaderCell>Name</Table.HeaderCell>\r\n\t\t\t\t\t        <Table.HeaderCell>Score</Table.HeaderCell>\r\n\t\t\t\t\t        <Table.HeaderCell>Time</Table.HeaderCell>\r\n\t\t\t\t\t      </Table.Row>\r\n\t\t\t\t\t    </Table.Header>\r\n\r\n\t\t\t\t\t    <Table.Body>\r\n\t\t\t\t\t      <Table.Row>\r\n\t\t\t\t\t      \t<Table.Cell>1</Table.Cell>\r\n\t\t\t\t\t        <Table.Cell>John</Table.Cell>\r\n\t\t\t\t\t        <Table.Cell>10</Table.Cell>\r\n\t\t\t\t\t        <Table.Cell>100 s</Table.Cell>\r\n\t\t\t\t\t      </Table.Row>\r\n\t\t\t\t\t    </Table.Body>\r\n\t\t\t\t\t  </Table>\r\n\t\t\t    </div>\r\n\t\t\t</div>\r\n\t\t)\r\n\t}\r\n}\r\n\r\nexport default HeaderContent","import React from 'react'\r\nimport { Container } from 'semantic-ui-react'\r\nimport HeaderContent from './HeaderContent'\r\n\r\nclass ContainerContent extends React.Component{\r\n  render(){\r\n    return(\r\n      <div>\r\n        <Container>\r\n          <HeaderContent/>\r\n        </Container>\r\n\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default ContainerContent","import React from 'react';\nimport './App.css';\nimport Container from './content/ContainerContent'\n\nfunction App() {\n  return (\n    <div>\n      <Container/>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import 'semantic-ui-css/semantic.min.css';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}